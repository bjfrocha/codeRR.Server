<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <AspNetCoreModuleName>AspNetCoreModule</AspNetCoreModuleName>
    <Configurations>Debug;Release;PremiseDebug</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <Version>2.3.15</Version>
    <UserSecretsId>18bfcacd-1b5d-435b-bc30-febb568a29b2</UserSecretsId>
  </PropertyGroup>


  <PropertyGroup Condition="'$(Configuration)' == 'Debug' OR '$(Configuration)' == 'PremiseDebug'">
    <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
  </PropertyGroup>


  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU' OR '$(Configuration)'=='PremiseDebug'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Premise' OR '$(Configuration)'=='PremiseDebug'">
    <DefineConstants>$(DefineConstants);PREMISE</DefineConstants>
  </PropertyGroup>
  <Target Name="DisplayMessages">
    <Message Text="$(DefineConstants)" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Coderr.Client.AspNetCore.Mvc" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.App" Version="2.2.5" />
    <PackageReference Include="Griffin.Framework" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="5.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Microsoft.Extensions.Configuration.json" Version="2.2.0" />
    <PackageReference Include="Standard.Licensing" Version="1.1.5" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Coderr.Server.Api\Coderr.Server.Api.csproj" />
    <ProjectReference Include="..\Coderr.Server.App\Coderr.Server.App.csproj" />
    <ProjectReference Include="..\Coderr.Server.Domain\Coderr.Server.Domain.csproj" />
    <ProjectReference Include="..\Coderr.Server.Infrastructure\Coderr.Server.Infrastructure.csproj" />
    <ProjectReference Include="..\Coderr.Server.Abstractions\Coderr.Server.Abstractions.csproj" />
    <ProjectReference Include="..\Coderr.Server.ReportAnalyzer\Coderr.Server.ReportAnalyzer.csproj" />
    <ProjectReference Include="..\Coderr.Server.SqlServer\Coderr.Server.SqlServer.csproj" />
    <ProjectReference Include="..\Coderr.Server.WebPush\Coderr.Server.WebPush.csproj" />
    <ProjectReference Include="..\Premise\Coderr.Server.Premise.Boot\Coderr.Server.Premise.Boot.csproj" />
  </ItemGroup>

  <!-- Condition="'$(Configuration)'!='Premise' AND '$(Configuration)'!='PremiseDebug'" -->
  <ItemGroup>
    <ProjectReference Include="..\Live\Coderr.Server.Live.Abstractions\Coderr.Server.Live.Abstractions.csproj" />
    <ProjectReference Include="..\Live\Coderr.Server.Live.Boot\Coderr.Server.Live.Boot.csproj" />
    <ProjectReference Include="..\Live\Coderr.Server.Live.LobbyIntegration\Coderr.Server.Live.LobbyIntegration.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="log4net.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.dev.js --mode=development" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- Exclude old script and font files from publish output-->
    <ItemGroup>
      <PrevScriptFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Remove="@(PrevScriptFiles->'%(FullPath)')" />
    </ItemGroup>

    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.prod.js --mode=production" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
